//=============================================================================
//
// 入力処理 [input.h]
// Author : HAL東京 高橋諒
//
//=============================================================================
#pragma once

#include "main.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

// プログラム分けするときに使う
#define	USE_KEYBOARD				// 宣言するとキーボードで操作可能になる
#define	USE_MOUSE					// 宣言するとマウスで操作可能になる
#define	USE_PAD						// 宣言するとパッドで操作可能になる


/* game pad情報 */
#define STICK_L_UP		0x00000001l	// 左スティックキー上(.IY<0)
#define STICK_L_DOWN	0x00000002l	// 左スティックキー下(.IY>0)
#define STICK_L_LEFT	0x00000004l	// 左スティックキー左(.IX<0)
#define STICK_L_RIGHT	0x00000008l	// 左スティックキー右(.IX>0)

#define STICK_R_UP		0x00010000l	// 右スティックキー上(.IY<0)
#define STICK_R_DOWN	0x00020000l	// 右スティックキー下(.IY>0)
#define STICK_R_LEFT	0x00040000l	// 右スティックキー左(.IX<0)
#define STICK_R_RIGHT	0x00080000l	// 右スティックキー右(.IX>0)

#define BUTTON_UP		0x00100000l	// 十字キー上(.IY<0)
#define BUTTON_DOWN		0x00200000l	// 十字キー下(.IY>0)
#define BUTTON_LEFT		0x00400000l	// 十字キー左(.IX<0)
#define BUTTON_RIGHT	0x00800000l	// 十字キー右(.IX>0)

#define BUTTON_X		0x00000010l	// Ｘボタン(.rgbButtons[0]&0x80)
#define BUTTON_A		0x00000020l	// Ａボタン(.rgbButtons[1]&0x80)
#define BUTTON_B		0x00000040l	// Ｂボタン(.rgbButtons[2]&0x80)
#define BUTTON_Y		0x00000080l	// Ｙボタン(.rgbButtons[3]&0x80)
#define BUTTON_L		0x00000100l	// Ｌボタン(.rgbButtons[4]&0x80)
#define BUTTON_R		0x00000200l	// Ｒボタン(.rgbButtons[5]&0x80)
#define BUTTON_L2		0x00000400l	// Ｌボタン(.rgbButtons[6]&0x80)
#define BUTTON_R2		0x00000800l	// Ｒボタン(.rgbButtons[7]&0x80)
#define BUTTON_SELECT	0x00001000l	// Ｚボタン(.rgbButtons[8]&0x80)
#define BUTTON_START	0x00002000l	// ＳＴＡＲＴボタン(.rgbButtons[9]&0x80)
#define BUTTON_LS		0x00004000l	// Ｚボタン(.rgbButtons[10]&0x80)
#define BUTTON_RS		0x00008000l	// Ｚボタン(.rgbButtons[11]&0x80)

#define GAMEPADMAX		4			// 同時に接続するジョイパッドの最大数をセット

enum {	// ボタンに対するrgbButtons[?]配列の配列番号(DirectInput上でのXYABボタン位置に合わせた)
	rgbButtons_X,
	rgbButtons_A,
	rgbButtons_B,
	rgbButtons_Y,
	rgbButtons_L,
	rgbButtons_R,
	rgbButtons_L2,
	rgbButtons_R2,
	rgbButtons_SELECT,
	rgbButtons_START,
};



//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
HRESULT InitInput(HINSTANCE hInst, HWND hWnd);
void UninitInput(void);
void UpdateInput(void);

//---------------------------- keyboard
BOOL GetKeyboardPress(int nKey);
BOOL GetKeyboardTrigger(int nKey);
BOOL GetKeyboardRepeat(int nKey);
BOOL GetKeyboardRelease(int nKey);

//---------------------------- mouse
BOOL IsMouseLeftPressed(void);      // 左クリックした状態
BOOL IsMouseLeftTriggered(void);    // 左クリックした瞬間
BOOL IsMouseRightPressed(void);     // 右クリックした状態
BOOL IsMouseRightTriggered(void);   // 右クリックした瞬間
BOOL IsMouseCenterPressed(void);    // 中クリックした状態
BOOL IsMouseCenterTriggered(void);  // 中クリックした瞬間
long GetMouseX(void);               // マウスがX方向に動いた相対値
long GetMouseY(void);               // マウスがY方向に動いた相対値
long GetMouseZ(void);               // マウスホイールが動いた相対値

//---------------------------- game pad
BOOL IsButtonPressed(int padNo,DWORD button);
BOOL IsButtonTriggered(int padNo,DWORD button);
BOOL IsButtonRelease(int padNo, DWORD button);

DIJOYSTATE2 GetDeviceState(int num = 0);

